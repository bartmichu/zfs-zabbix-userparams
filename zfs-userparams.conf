# https://github.com/bartmichu/zfs-zabbix-userparams
#
# Basic monitoring of ZFS data pools.
#
# Usage:
# - Copy userparams file (zfs-userparams.conf) to a directory included in your Zabbix Agent configuration file, e.g. /etc/zabbix/zabbix_agentd.d/
# - Set userparams file owner and group (sudo chown root:zabbix zfs-userparams.conf)
# - Set userparams file mode (sudo chmod 0440 zfs-userparams.conf)
# - Restart Zabbix Agent (sudo systemctl restart zabbix-agent.service)
# - Import corresponding template file (zfs-userparams-template.yaml) on Zabbix Server
# - Link 'Template zfs-userparams by Zabbix agent active' template to selected hosts
#
# System requirements:
# - zfsutils-linux package installed
#
# Tested on:
# - Zabbix Agent 5.x on Ubuntu 20.04
# - Zabbix Server 5.x
#


# Check for DEGRADED pools.
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.degraded,zpool list -H -o health | grep -i degraded | wc -l


# Check for FAULTED pools.
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.faulted,zpool list -H -o health | grep -i faulted | wc -l


# Check for OFFLINE pools.
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.offline,zpool list -H -o health | grep -i offline | wc -l


# Check for UNAVAIL pools.
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.unavail,zpool list -H -o health | grep -i unavail | wc -l


# Check for REMOVED pools.
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.removed,zpool list -H -o health | grep -i removed | wc -l


# Check for pools with more than 80% disk space used (capacity).
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.capacity-80,zpool list -H -o capacity | cut -d '%' -f1 | awk '$1>80' | wc -l


# Check for pools with more than 90% disk space used (capacity).
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.capacity-90,zpool list -H -o capacity | cut -d '%' -f1 | awk '$1>90' | wc -l


# Check for pools with more than 70% free disk space fragmentation.
#
# Expected return value: a number indicating the number of matching pools.
UserParameter=zfs-userparams.pool.fragmentation,zpool list -H -o fragmentation | cut -d '%' -f1 | awk '$1>70' | wc -l


# Check the number of available ZFS storage pools.
#
# Expected return value: a number indicating the number of available pools.
UserParameter=zfs-userparams.pool.number,zpool list -H | wc -l
