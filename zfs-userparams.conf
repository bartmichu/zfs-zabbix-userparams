# https://github.com/bartmichu/zfs-zabbix-userparams
#
# Basic monitoring of ZFS storage pools.
#
# Usage:
# - Copy this file (zfs-userparams.conf) to a directory included in your Zabbix Agent configuration,
#   such as /etc/zabbix/zabbix_agentd.d/ or /etc/zabbix/zabbix_agent2.d/.
# - Set the owner and group of the file (sudo chown root:zabbix zfs-userparams.conf).
# - Set the file permissions (sudo chmod 0440 zfs-userparams.conf).
# - Restart the Zabbix Agent (e.g., sudo systemctl restart zabbix-agent.service or zabbix-agent2.service).
# - Navigate to 'Configuration → Templates → Import', and upload the corresponding template file
#   (zfs-userparams-template.yaml) to the Zabbix Server.
# - Link the 'Basic ZFS by Zabbix agent active' template to the desired hosts.
# - If necessary, increase the Timeout value in the Zabbix Agent configuration file (e.g., Timeout=30).
#
# System requirements:
# - The 'zfsutils-linux' package must be installed.
#
# Tested on:
# - Zabbix Agent 2 running on Ubuntu 22.04 and 24.04
# - Zabbix Server 6.0 LTS
#

# Return the version number of this file.
# Reserved for future use and versioning within the template.
UserParameter=zfs-userparams.userparams-version,echo 2

# Check for degraded pools.
# Expected return value: an integer indicating the number of degraded pools.
UserParameter=zfs-userparams.pool.degraded,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i degraded | /usr/bin/wc -l

# Check for faulted pools.
# Expected return value: an integer indicating the number of faulted pools.
UserParameter=zfs-userparams.pool.faulted,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i faulted | /usr/bin/wc -l

# Check for offline pools.
# Expected return value: an integer indicating the number of offline pools.
UserParameter=zfs-userparams.pool.offline,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i offline | /usr/bin/wc -l

# Check for unavailable pools.
# Expected return value: an integer indicating the number of unavailable pools.
UserParameter=zfs-userparams.pool.unavail,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i unavail | /usr/bin/wc -l

# Check for removed pools.
# Expected return value: an integer indicating the number of removed pools.
UserParameter=zfs-userparams.pool.removed,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i removed | /usr/bin/wc -l

# Check for pools with more than 80% disk space used.
# Expected return value: an integer indicating the number of pools exceeding 80% usage.
UserParameter=zfs-userparams.pool.capacity-80,/usr/sbin/zpool list -H -o capacity | /usr/bin/cut -d '%' -f1 | /usr/bin/awk '$1>80' | /usr/bin/wc -l

# Check for pools with more than 90% disk space used.
# Expected return value: an integer indicating the number of pools exceeding 90% usage.
UserParameter=zfs-userparams.pool.capacity-90,/usr/sbin/zpool list -H -o capacity | /usr/bin/cut -d '%' -f1 | /usr/bin/awk '$1>90' | /usr/bin/wc -l

# Check for pools with more than 70% free disk space fragmentation.
# Expected return value: an integer indicating the number of pools with fragmentation above 70%.
UserParameter=zfs-userparams.pool.fragmentation,/usr/sbin/zpool list -H -o fragmentation | /usr/bin/cut -d '%' -f1 | /usr/bin/awk '$1>70' | /usr/bin/wc -l

# Check the total number of available ZFS storage pools.
# Expected return value: an integer indicating the total number of available pools.
UserParameter=zfs-userparams.pool.number,/usr/sbin/zpool list -H | /usr/bin/wc -l
